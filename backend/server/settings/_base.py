"""
Django settings for skeleton project.

Generated by 'django-admin startproject' using Django 3.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import sys
from datetime import timedelta
from pathlib import Path

import environ
import mongoengine

env = environ.Env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

EXTERNAL_BASE = BASE_DIR / "externals"
EXTERNAL_LIBS_PATH = str(EXTERNAL_BASE / "libs")
EXTERNAL_APPS_PATH = str(EXTERNAL_BASE / "apps")
BASE_APPS = str(BASE_DIR / "server" / "apps")  # apps deber√≠a estar fuera

sys.path = ["", EXTERNAL_LIBS_PATH, EXTERNAL_APPS_PATH, BASE_APPS] + sys.path

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env(
    "SECRET_KEY",
    default="django-insecure-(r7cet+an(xt8x&n)tv^)r_+z2#sm1tomtpwfd_(qmllaebh9t",
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG", default=False)

ALLOWED_HOSTS = env.list(
    "ALLOWED_HOSTS",
    default=[
        "127.0.0.1",
        "localhost",
        "0.0.0.0",  # nosec
    ],
)

# Application definition

DJANGO_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "polymorphic",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.humanize",
]

THIRD_APPS = [
    "anymail",
    "celery",
    "django_celery_results",
    "ckeditor",
    "ckeditor_uploader",
    "corsheaders",
    "drf_spectacular",
    "rest_framework",
    "django_filters",
    "admin_auto_filters",
    "rest_framework.authtoken",
]

LOCAL_APPS = [
    "core",
    "users",
    "api",
    "transportation",
    "crew",
    "locations",
    "middleware",
    "web",
]

INSTALLED_APPS = DJANGO_APPS + THIRD_APPS + LOCAL_APPS

MIDDLEWARE = [
    "middleware.kubernetes_health_checks.KubernetesHealthChecks",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.locale.LocaleMiddleware",
]

ROOT_URLCONF = "server.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [str(BASE_DIR / "server" / "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.template.context_processors.i18n",
                "django.template.context_processors.media",
                "django.template.context_processors.static",
                "django.template.context_processors.tz",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "server.wsgi.application"

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": env("MYSQL_DATABASE", default="andimar"),
        "USER": env("MYSQL_USER", default="root"),
        "PASSWORD": env("MYSQL_PASSWORD", default="Admin.315"),
        "HOST": env("MYSQL_HOST", default="localhost"),
        "PORT": env("MYSQL_PORT", default="3306"),
        "CONN_MAX_AGE": env("MYSQL_CONN_MAX_AGE", default=0),
        "ATOMIC_REQUESTS": True,
        "OPTIONS": {
            "init_command": "SET foreign_key_checks = 0;",
        },
    },
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "es"

TIME_ZONE = "America/Santiago"

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "public"

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

AUTH_USER_MODEL = "users.CustomUser"

# REST Config
REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "PAGE_SIZE": 10,
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.BasicAuthentication",
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "DEFAULT_FILTER_BACKENDS": [
        "rest_framework.filters.SearchFilter",
        "django_filters.rest_framework.DjangoFilterBackend",
        "rest_framework.filters.OrderingFilter",
    ],
    "SEARCH_PARAM": "filter[search]",
    "TEST_REQUEST_DEFAULT_FORMAT": "vnd.api+json",
    "TEST_REQUEST_RENDERER_CLASSES": [
        "rest_framework.renderers.MultiPartRenderer",
        "rest_framework.renderers.JSONRenderer",
    ],
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=5),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=5),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": False,
    "AUTH_HEADER_TYPES": ("Bearer",),
    "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
}

# API SCHEMA
SPECTACULAR_SETTINGS = {
    "TITLE": "Andimar API",
    "DESCRIPTION": "Servicios para web de Andimar",
    "VERSION": "1.0.0",
    "SCHEMA_PATH_PREFIX": "/api/v1",
    "POSTPROCESSING_HOOKS": ["core.utils.enum_hook"],
    "ENUM_NAME_OVERRIDES": {"PersonalStatus": "crew.models.Personal.Status"},
}

REDIS_HOST = env("REDIS_HOST", default="redis")
REDIS_PORT = env.int("REDIS_PORT", default=6379)
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.redis.RedisCache",
        "LOCATION": f"redis://{REDIS_HOST}:{REDIS_PORT}/1",
    }
}

SESSION_ENGINE = "django.contrib.sessions.backends.cache"

RABBITMQ_URI = "amqp://{}:{}@{}:{}/".format(
    env("RABBITMQ_DEFAULT_USER", default="conejomq"),
    env("RABBITMQ_DEFAULT_PASS", default="mai3Iegh0iep"),
    env("RABBITMQ_HOST", default="rabbit-mq"),
    env("RABBITMQ_PORT", default="5672"),
)

CELERY_BROKER_URL = RABBITMQ_URI
CELERY_RESULT_BACKEND = "rpc"
CELERY_ACCEPT_CONTENT = ["application/json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_TIMEZONE = TIME_ZONE
DJANGO_CELERY_RESULTS_TASK_ID_MAX_LENGTH = 191


# Security
SESSION_COOKIE_HTTPONLY = True
CSRF_COOKIE_HTTPONLY = True
SECURE_BROWSER_XSS_FILTER = True

# Email
# TODO: Change senders to andimar also using their keys
ANYMAIL = {
    "SENDGRID_API_KEY": env("SENDGRID_API_KEY"),
}
EMAIL_BACKEND = "anymail.backends.sendgrid.EmailBackend"
DEFAULT_FROM_EMAIL = env("DEFAULT_FROM_EMAIL", default="ventaonline@andimar.cl")
SERVER_EMAIL = env("SERVER_EMAIL", default="ventaonline@andimar.cl")
SUPPORT_EMAIL = env("SUPPORT_EMAIL", default="ventaonline@andimar.cl")

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

LOCALE_PATHS = [
    BASE_DIR / "locale",
]

# CkEditor
CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_IMAGE_BACKEND = "pillow"
CKEDITOR_CONFIGS = {
    "default": {
        "toolbar": "full",
        "tabSpaces": 4,
    },
}

# Cors
CSRF_TRUSTED_ORIGINS = [
    "http://api.andimar-qa.lnt.cl",
    "http://andimar-qa.lnt.cl",
    "http://api.andimar-dev.lnt.cl",
    "http://andimar-dev.lnt.cl",
    "https://andimar.k8s.lnt.cl",
    "https://api.k8s.lnt.cl",
]
CORS_URLS_REGEX = r"^/api/.*$"
CORS_ALLOWED_ORIGINS = [  # TODO: Add domain
    "http://localhost:8000",
    "http://localhost:3000",
    "http://127.0.0.1:8000",
    "http://127.0.0.1:3000",
    "http://api.andimar-qa.lnt.cl",
    "http://andimar-qa.lnt.cl",
    "http://andimar-qa.lnt.cl:3000",
    "http://api.andimar-dev.lnt.cl",
    "http://andimar-dev.lnt.cl",
    "http://andimar-dev.lnt.cl:3000",
    "https://andimar.k8s.lnt.cl",
    "https://api.k8s.lnt.cl",
]

SECURE_REFERRER_POLICY = "strict-origin"

WEBSITE_URL = env(
    "WEBSITE_URL",
    default="http://andimar-qa.lnt.cl",
)
SERVER_URL = env(
    "SERVER_URL",
    default="http://api.andimar-qa.lnt.cl",
)

# WEB CASH REGISTER ID
WEB_CASH_REGISTER_NAME = env(
    "WEB_CASH_REGISTER_NAME",
    default="Venta Web",
)

TRANSBANK_RETURN_URL = env("TRANSBANK_RETURN_URL", default="http://api.andimar-qa.lnt.cl/api/v1/payment_method/transbank/commit/")
TRANSBANK_FINAL_URL = env("TRANSBANK_FINAL_URL", default="http://andimar-qa.lnt.cl/webpay-result/")

MONGODB = env(
    "MONGODB",
    default="mongodb://andimar:andimar123@mongodb:27017/andimar?authSource=admin",
)

mongoengine.connect(host=MONGODB)
